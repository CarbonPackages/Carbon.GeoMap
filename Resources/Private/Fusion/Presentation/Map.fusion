prototype(Carbon.GeoMap:Presentation.Map) < prototype(Neos.Fusion:Component) {
    content = null
    class = null
    additionalClass = null

    aspectRatio = '16 / 9'
    effect = null

    js = null
    mjs = null
    css = null
    zoom = null

    showReloadButton = false

    coordinates = null

    center = ${Carbon.Array.check(this.coordinates) ? Carbon.GeoMap.centerFromCoordinates(this.coordinates) : null}
    slipstream = Neos.Fusion:DataStructure {
        css = ${Configuration.setting('Carbon.GeoMap.slipstream.css')}
        js = ${Configuration.setting('Carbon.GeoMap.slipstream.js')}
        mjs = ${Configuration.setting('Carbon.GeoMap.slipstream.mjs')}
    }

    // @internal Move to @private if minimal Neos requirement is 8.3 or higher
    _fileLoader = ${{js: this.js, mjs: this.mjs, css: this.css, slipstream: this.slipstream}}
    _fileLoader.@process.convert = Carbon.FileLoader:Component {
        slipstream = ${value.slipstream}
        js = ${value.js}
        mjs = ${value.mjs}
        css = ${value.css}
    }
    _fileLoaderAsAttributes = ${!Type.isString(this._fileLoader)}

    renderer = afx`
        <div
            class={Carbon.String.merge("carbon-geomap", props.class, props.additionalClass)}
            data-center={Json.stringify(props.center)}
            data-zoom={props.zoom}
            {...(props._fileLoaderAsAttributes ? props._fileLoader : {})}
            {...props.attributes}
        >
            {props._fileLoaderAsAttributes ? '' : props._fileLoader}
            <div
                class="carbon-geomap__canvas"
                data-effect={Type.isString(props.effect) ? props.effect : null}
                style={"aspect-ratio:" + props.aspectRatio}>
            </div>
            <button class="carbon-geomap__reload-button" @if={props.showReloadButton} type="button" onClick="window.location.reload()">
                {Carbon.Backend.translate('reloadMap', 'Reload map', [], 'Main', 'Carbon.GeoMap')}
            </button>
            <div class="carbon-geomap__addresses" @if={props.content}>{props.content}</div>
        </div>
    `
}
