prototype(Carbon.GeoMap:Presentation.Map) < prototype(Neos.Fusion:Component) {
    content = null
    class = null
    additionalClass = null

    aspectRatio = '16 / 9'
    effect = null

    js = null
    mjs = null
    css = null
    zoom = null

    showReloadButton = false
    reloadFunction = ${Configuration.setting('Carbon.GeoMap.reloadFunction')}
    reloadButtonLocation = ${Configuration.setting('Carbon.GeoMap.reloadButtonLocation')}

    coordinates = null

    center = ${Carbon.Array.check(this.coordinates) ? Carbon.GeoMap.centerFromCoordinates(this.coordinates) : null}
    slipstream = Neos.Fusion:DataStructure {
        css = ${Configuration.setting('Carbon.GeoMap.slipstream.css')}
        js = ${Configuration.setting('Carbon.GeoMap.slipstream.js')}
        mjs = ${Configuration.setting('Carbon.GeoMap.slipstream.mjs')}
    }

    @private {
        fileLoader = Carbon.FileLoader:Component {
            slipstream = ${props.slipstream}
            js = ${props.js}
            mjs = ${props.mjs}
            css = ${props.css}
        }
        fileLoaderAsAttributes = ${!Type.isString(private.fileLoader)}
        reload = afx`
            <button class="carbon-geomap__reload-button" @if={props.showReloadButton && props.reloadFunction} type="button" onClick={props.reloadFunction}>
                {Carbon.Backend.translate('reloadMap', 'Reload map', [], 'Main', 'Carbon.GeoMap')}
            </button>
        `
    }

    renderer = afx`
        <div
            class={Carbon.String.merge("carbon-geomap", props.class, props.additionalClass)}
            data-center={Json.stringify(props.center)}
            data-zoom={props.zoom}
            {...(private.fileLoaderAsAttributes ? private.fileLoader : {})}
            {...props.attributes}
        >
            {private.fileLoaderAsAttributes ? '' : private.fileLoader}
            <div
                class="carbon-geomap__canvas"
                data-effect={Type.isString(props.effect) ? props.effect : null}
                style={"aspect-ratio:" + props.aspectRatio}
            >
                {props.reloadButtonLocation == 'inside' ? private.reload : ''}
            </div>
            {props.reloadButtonLocation == 'after' ? private.reload : ''}
            <div class="carbon-geomap__addresses" @if={props.content}>{props.content}</div>
        </div>
    `
}
